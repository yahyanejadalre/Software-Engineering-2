openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/user/profile/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
  /api/booking/:
    get:
      operationId: listBookingHistorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookingHistory'
          description: ''
      tags:
      - api
    post:
      operationId: createBookingHistory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingChargingSocket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingChargingSocket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingChargingSocket'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingChargingSocket'
          description: ''
      tags:
      - api
  /api/booking/{id}/:
    get:
      operationId: retrieveBookingHistory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Booking History.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingHistory'
          description: ''
      tags:
      - api
    put:
      operationId: updateBookingHistory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Booking History.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingHistory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingHistory'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateBookingHistory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Booking History.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingHistory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingHistory'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyBookingHistory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Booking History.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/cs/:
    get:
      operationId: listChargingStations
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: power_source
        required: false
        in: query
        description: power_source
        schema:
          type: string
          enum:
          - DSO
          - Battery
          - Mix
      - name: stations__type
        required: false
        in: query
        description: stations__type
        schema:
          type: string
          enum:
          - Slow
          - Fast
          - Rapid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChargingStationModel'
          description: ''
      tags:
      - api
    post:
      operationId: createChargingStation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationModel'
          description: ''
      tags:
      - api
  /api/cs/{id}/:
    get:
      operationId: retrieveChargingStation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Charging Station.
        schema:
          type: string
      - name: power_source
        required: false
        in: query
        description: power_source
        schema:
          type: string
          enum:
          - DSO
          - Battery
          - Mix
      - name: stations__type
        required: false
        in: query
        description: stations__type
        schema:
          type: string
          enum:
          - Slow
          - Fast
          - Rapid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationModelDetail'
          description: ''
      tags:
      - api
    put:
      operationId: updateChargingStation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Charging Station.
        schema:
          type: string
      - name: power_source
        required: false
        in: query
        description: power_source
        schema:
          type: string
          enum:
          - DSO
          - Battery
          - Mix
      - name: stations__type
        required: false
        in: query
        description: stations__type
        schema:
          type: string
          enum:
          - Slow
          - Fast
          - Rapid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationModel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateChargingStation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Charging Station.
        schema:
          type: string
      - name: power_source
        required: false
        in: query
        description: power_source
        schema:
          type: string
          enum:
          - DSO
          - Battery
          - Mix
      - name: stations__type
        required: false
        in: query
        description: stations__type
        schema:
          type: string
          enum:
          - Slow
          - Fast
          - Rapid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChargingStationModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationModel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyChargingStation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Charging Station.
        schema:
          type: string
      - name: power_source
        required: false
        in: query
        description: power_source
        schema:
          type: string
          enum:
          - DSO
          - Battery
          - Mix
      - name: stations__type
        required: false
        in: query
        description: stations__type
        schema:
          type: string
          enum:
          - Slow
          - Fast
          - Rapid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/cs/{id}/external_status/:
    get:
      operationId: externalStatusChargingStation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Charging Station.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingStationModel'
          description: ''
      tags:
      - api
  /api/user/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/user/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/user/register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
components:
  schemas:
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 32
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          readOnly: true
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          readOnly: true
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_superuser:
          type: boolean
          readOnly: true
          description: Designates that this user has all permissions without explicitly
            assigning them.
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - password
    BookingHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - Booked
          - Charging
          - Expired
          - Done
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        charging_stared_at:
          type: string
          format: date-time
          nullable: true
        unique_code:
          type: string
          format: uuid
        price:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
        charging_socket:
          type: string
      required:
      - start_time
      - end_time
      - price
      - charging_socket
    ChargingStationModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: string
          readOnly: true
        power_source:
          enum:
          - DSO
          - Battery
          - Mix
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - price
    ChargingStationModelDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: string
          readOnly: true
        power_source:
          enum:
          - DSO
          - Battery
          - Mix
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        charging_sockets:
          type: string
          readOnly: true
      required:
      - price
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
      - password
      - email
      - first_name
      - last_name
    BookingChargingSocket:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        charging_socket:
          type: string
      required:
      - start_time
      - end_time
      - charging_socket
